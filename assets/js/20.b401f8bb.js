(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{528:function(a,e,t){"use strict";t.r(e);var n=t(13),s=Object(n.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"installing-krawler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-krawler"}},[a._v("#")]),a._v(" Installing Krawler")]),a._v(" "),t("h2",{attrs:{id:"as-command-line-interface-cli"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#as-command-line-interface-cli"}},[a._v("#")]),a._v(" As Command-Line Interface (CLI)")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -g @kalisio/krawler\n// Or with Yarn\nyar global "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" @kalisio/krawler\n")])])]),t("h2",{attrs:{id:"as-module"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#as-module"}},[a._v("#")]),a._v(" As module")]),a._v(" "),t("p",[a._v("As dependency in another module/app:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" @kalisio/krawler --save\n// Or with Yarn\nyar "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" @kalisio/krawler\n")])])]),t("p",[a._v("Or when developing:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/kalisio/krawler\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" krawler\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v("\n// Now you can launch the krawler CLI\nkrawler jobfile.js\n// Or "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v(" wirh it "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" another package\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v(" @kalisio/krawler\n")])])]),t("blockquote",[t("p",[a._v("Please refer to the "),t("a",{attrs:{href:"https://kalisio.github.io/kdk/guides/development/setup.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("KDK documentation"),t("OutboundLink")],1),a._v(" to setup your development environment.")])]),a._v(" "),t("p",[a._v("A native command-line executable can be generated using "),t("a",{attrs:{href:"https://github.com/zeit/pkg",target:"_blank",rel:"noopener noreferrer"}},[a._v("pkg"),t("OutboundLink")],1),a._v(" eg for windows:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("pkg "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" --target node8-win-x86\n")])])]),t("blockquote",[t("p",[a._v("Because it relies on the GDAL native bindings you will need to deploy the "),t("em",[a._v("gdal.node")]),a._v(" file (usually found in "),t("em",[a._v("node_modules\\gdal\\lib\\binding")]),a._v(") to the same directory as the executable. Take care to generate the executable with the same architecture than your Node.js version.")])]),a._v(" "),t("h2",{attrs:{id:"as-a-docker-container"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#as-a-docker-container"}},[a._v("#")]),a._v(" As a Docker container")]),a._v(" "),t("p",[a._v("When using krawler as a Docker container the arguments to the CLI have to be provided through the ARGS environment variable, along with any other required variables and the data volume to make inputs accessible within the container and get output files back:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull kalisio/krawler\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run --name krawler --rm -v /mnt/data:/opt/krawler/data -e "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ARGS=/opt/krawler/data/jobfile.js"')]),a._v(" -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("S3_BUCKET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("krawler kalisio/krawler\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);