import{_ as t,o as e,c as a,Q as r}from"./chunks/framework.e713b733.js";const o="/krawler/assets/etl.0ee8b4aa.jpg",m=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"about/introduction.md","filePath":"about/introduction.md"}'),n={name:"about/introduction.md"},s=r('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">â€‹</a></h1><p>Krawler aims at making the automated process of extracting and processing (geographic) data from heterogeneous sources easy. It can be viewed as a minimalist <strong>Extract, Transform, Load</strong> (ETL). <a href="https://en.wikipedia.org/wiki/Extract,_transform,_load" target="_blank" rel="noreferrer"><strong>ETL</strong></a> refers to a process where data is</p><ol><li><strong>extracted</strong> from heterogeneous data sources (e.g. databases or web services);</li><li><strong>transformed</strong> in a target format or structure for the purposes of querying and analysis (e.g. JSON or CSV);</li><li><strong>loaded</strong> into a final target data store (e.g. a file system or a database).</li></ol><p><img src="'+o+'" alt="ETL"></p><p>ETL naturally leads to the concept of a <strong>pipeline</strong>: a set of processing functions (called <strong>hooks</strong> in krawler) connected in series, often executed in parallel, where the output of one function is the input of the next one. The execution of a given pipeline on an input dataset to produce the associated output is a <strong>job</strong> performed by krawler.</p><p>A set of introduction articles to krawler have been written and detail:</p><ul><li><a href="https://medium.com/@luc.claustres/a-minimalist-etl-using-feathersjs-part-1-1d56972d6500" target="_blank" rel="noreferrer">the underlying concepts</a></li><li><a href="https://medium.com/@luc.claustres/a-minimalist-etl-using-feathersjs-part-2-6aa89bd73d66" target="_blank" rel="noreferrer">the practical use case of geographical data processing</a></li></ul>',7),i=[s];function c(l,d,u,p,g,f){return e(),a("div",null,i)}const _=t(n,[["render",c]]);export{m as __pageData,_ as default};
